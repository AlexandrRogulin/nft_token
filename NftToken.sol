
/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;

contract NftToken {

    struct CatToken {
        string name;
        string color;
        uint8 weight;
    }

    CatToken[] public tokens;
    mapping (uint => uint128) public tradedTokens;
    mapping (string => uint) nameToToken;
    mapping (uint => uint) tokenToOwner;


    modifier checkTokenExistence(uint tokenId) {
        require(tokenId <= tokens.length - 1, 201);
        _;
    }


    function createToken(string tokenName, string color, uint8 weight) public {
        require(!nameToToken.exists(tokenName), 203, "Токен с таким именем уже есть");
        require(!tokenName.empty(), 202, "У токена должно быть имя");
        tvm.accept();

        tokens.push(CatToken(tokenName, color, weight));

        uint lastTokenId = tokens.length - 1;
        nameToToken[tokenName] = lastTokenId;
        tokenToOwner[lastTokenId] = msg.pubkey();
    }


    function offerTokenForSale(uint tokenId, uint128 price) public checkTokenExistence(tokenId) {
        require(msg.pubkey() == tokenToOwner[tokenId], 204, "Операция доступна только для владельца токена");
        tvm.accept();

        tradedTokens[tokenId] = price;
    }


    function getToken(uint tokenId) public checkTokenExistence(tokenId) view returns (CatToken) {
        return tokens[tokenId];
    }
}
